// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: webrtc.proto

package webrtc_recorder

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ICEServers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls           []string `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
	Username       string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	CredentialType int32    `protobuf:"varint,3,opt,name=credentialType,proto3" json:"credentialType,omitempty"`
	Credential     []byte   `protobuf:"bytes,4,opt,name=credential,proto3" json:"credential,omitempty"`
}

func (x *ICEServers) Reset() {
	*x = ICEServers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webrtc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ICEServers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ICEServers) ProtoMessage() {}

func (x *ICEServers) ProtoReflect() protoreflect.Message {
	mi := &file_webrtc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ICEServers.ProtoReflect.Descriptor instead.
func (*ICEServers) Descriptor() ([]byte, []int) {
	return file_webrtc_proto_rawDescGZIP(), []int{0}
}

func (x *ICEServers) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *ICEServers) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ICEServers) GetCredentialType() int32 {
	if x != nil {
		return x.CredentialType
	}
	return 0
}

func (x *ICEServers) GetCredential() []byte {
	if x != nil {
		return x.Credential
	}
	return nil
}

type UploadP2PVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SdpOffer   string        `protobuf:"bytes,1,opt,name=sdp_offer,json=sdpOffer,proto3" json:"sdp_offer,omitempty"`
	Name       string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Uuid       string        `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	IceServers []*ICEServers `protobuf:"bytes,4,rep,name=ice_servers,json=iceServers,proto3" json:"ice_servers,omitempty"`
}

func (x *UploadP2PVideoRequest) Reset() {
	*x = UploadP2PVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webrtc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadP2PVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadP2PVideoRequest) ProtoMessage() {}

func (x *UploadP2PVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webrtc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadP2PVideoRequest.ProtoReflect.Descriptor instead.
func (*UploadP2PVideoRequest) Descriptor() ([]byte, []int) {
	return file_webrtc_proto_rawDescGZIP(), []int{1}
}

func (x *UploadP2PVideoRequest) GetSdpOffer() string {
	if x != nil {
		return x.SdpOffer
	}
	return ""
}

func (x *UploadP2PVideoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadP2PVideoRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UploadP2PVideoRequest) GetIceServers() []*ICEServers {
	if x != nil {
		return x.IceServers
	}
	return nil
}

type UploadP2PVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SdpAnswer string `protobuf:"bytes,1,opt,name=sdp_answer,json=sdpAnswer,proto3" json:"sdp_answer,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UploadP2PVideoResponse) Reset() {
	*x = UploadP2PVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webrtc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadP2PVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadP2PVideoResponse) ProtoMessage() {}

func (x *UploadP2PVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webrtc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadP2PVideoResponse.ProtoReflect.Descriptor instead.
func (*UploadP2PVideoResponse) Descriptor() ([]byte, []int) {
	return file_webrtc_proto_rawDescGZIP(), []int{2}
}

func (x *UploadP2PVideoResponse) GetSdpAnswer() string {
	if x != nil {
		return x.SdpAnswer
	}
	return ""
}

func (x *UploadP2PVideoResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StopP2PVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StopP2PVideoRequest) Reset() {
	*x = StopP2PVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webrtc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopP2PVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopP2PVideoRequest) ProtoMessage() {}

func (x *StopP2PVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webrtc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopP2PVideoRequest.ProtoReflect.Descriptor instead.
func (*StopP2PVideoRequest) Descriptor() ([]byte, []int) {
	return file_webrtc_proto_rawDescGZIP(), []int{3}
}

func (x *StopP2PVideoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StopP2PVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopP2PVideoResponse) Reset() {
	*x = StopP2PVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webrtc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopP2PVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopP2PVideoResponse) ProtoMessage() {}

func (x *StopP2PVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webrtc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopP2PVideoResponse.ProtoReflect.Descriptor instead.
func (*StopP2PVideoResponse) Descriptor() ([]byte, []int) {
	return file_webrtc_proto_rawDescGZIP(), []int{4}
}

type RenegotiateP2PVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SdpOffer string `protobuf:"bytes,2,opt,name=sdp_offer,json=sdpOffer,proto3" json:"sdp_offer,omitempty"`
}

func (x *RenegotiateP2PVideoRequest) Reset() {
	*x = RenegotiateP2PVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webrtc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenegotiateP2PVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenegotiateP2PVideoRequest) ProtoMessage() {}

func (x *RenegotiateP2PVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webrtc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenegotiateP2PVideoRequest.ProtoReflect.Descriptor instead.
func (*RenegotiateP2PVideoRequest) Descriptor() ([]byte, []int) {
	return file_webrtc_proto_rawDescGZIP(), []int{5}
}

func (x *RenegotiateP2PVideoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RenegotiateP2PVideoRequest) GetSdpOffer() string {
	if x != nil {
		return x.SdpOffer
	}
	return ""
}

type RenegotiateP2PVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SdpAnswer string `protobuf:"bytes,1,opt,name=sdp_answer,json=sdpAnswer,proto3" json:"sdp_answer,omitempty"`
}

func (x *RenegotiateP2PVideoResponse) Reset() {
	*x = RenegotiateP2PVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webrtc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenegotiateP2PVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenegotiateP2PVideoResponse) ProtoMessage() {}

func (x *RenegotiateP2PVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_webrtc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenegotiateP2PVideoResponse.ProtoReflect.Descriptor instead.
func (*RenegotiateP2PVideoResponse) Descriptor() ([]byte, []int) {
	return file_webrtc_proto_rawDescGZIP(), []int{6}
}

func (x *RenegotiateP2PVideoResponse) GetSdpAnswer() string {
	if x != nil {
		return x.SdpAnswer
	}
	return ""
}

var File_webrtc_proto protoreflect.FileDescriptor

var file_webrtc_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x01,
	0x0a, 0x0a, 0x49, 0x43, 0x45, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x22, 0x9a, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x32, 0x50, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x64, 0x70, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x64, 0x70, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x74,
	0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x43, 0x45, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x22, 0x47, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x32, 0x50, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x64, 0x70, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x64, 0x70, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x53, 0x74,
	0x6f, 0x70, 0x50, 0x32, 0x50, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x32, 0x50, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x1a, 0x52, 0x65, 0x6e,
	0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x50, 0x32, 0x50, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x64, 0x70, 0x5f, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x64, 0x70, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x1b, 0x52, 0x65, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x50, 0x32, 0x50, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x64, 0x70, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x64, 0x70, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x32, 0x9a, 0x03, 0x0a, 0x0d, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x32,
	0x50, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x26, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x32, 0x50, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x32, 0x50, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a,
	0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x2f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x7a, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x32, 0x50, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x32, 0x50, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x32,
	0x50, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x2a, 0x12, 0x2f, 0x77, 0x65, 0x62, 0x72,
	0x74, 0x63, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8f, 0x01,
	0x0a, 0x13, 0x52, 0x65, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x50, 0x32, 0x50,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x2b, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x50, 0x32, 0x50, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x50, 0x32, 0x50, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x1a, 0x12, 0x2f, 0x77, 0x65,
	0x62, 0x72, 0x74, 0x63, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65,
	0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x77, 0x65, 0x62,
	0x72, 0x74, 0x63, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_webrtc_proto_rawDescOnce sync.Once
	file_webrtc_proto_rawDescData = file_webrtc_proto_rawDesc
)

func file_webrtc_proto_rawDescGZIP() []byte {
	file_webrtc_proto_rawDescOnce.Do(func() {
		file_webrtc_proto_rawDescData = protoimpl.X.CompressGZIP(file_webrtc_proto_rawDescData)
	})
	return file_webrtc_proto_rawDescData
}

var file_webrtc_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_webrtc_proto_goTypes = []interface{}{
	(*ICEServers)(nil),                  // 0: webrtc_recorder.ICEServers
	(*UploadP2PVideoRequest)(nil),       // 1: webrtc_recorder.UploadP2PVideoRequest
	(*UploadP2PVideoResponse)(nil),      // 2: webrtc_recorder.UploadP2PVideoResponse
	(*StopP2PVideoRequest)(nil),         // 3: webrtc_recorder.StopP2PVideoRequest
	(*StopP2PVideoResponse)(nil),        // 4: webrtc_recorder.StopP2PVideoResponse
	(*RenegotiateP2PVideoRequest)(nil),  // 5: webrtc_recorder.RenegotiateP2PVideoRequest
	(*RenegotiateP2PVideoResponse)(nil), // 6: webrtc_recorder.RenegotiateP2PVideoResponse
}
var file_webrtc_proto_depIdxs = []int32{
	0, // 0: webrtc_recorder.UploadP2PVideoRequest.ice_servers:type_name -> webrtc_recorder.ICEServers
	1, // 1: webrtc_recorder.WebRTCService.UploadP2PVideo:input_type -> webrtc_recorder.UploadP2PVideoRequest
	3, // 2: webrtc_recorder.WebRTCService.StopP2PVideo:input_type -> webrtc_recorder.StopP2PVideoRequest
	5, // 3: webrtc_recorder.WebRTCService.RenegotiateP2PVideo:input_type -> webrtc_recorder.RenegotiateP2PVideoRequest
	2, // 4: webrtc_recorder.WebRTCService.UploadP2PVideo:output_type -> webrtc_recorder.UploadP2PVideoResponse
	4, // 5: webrtc_recorder.WebRTCService.StopP2PVideo:output_type -> webrtc_recorder.StopP2PVideoResponse
	6, // 6: webrtc_recorder.WebRTCService.RenegotiateP2PVideo:output_type -> webrtc_recorder.RenegotiateP2PVideoResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_webrtc_proto_init() }
func file_webrtc_proto_init() {
	if File_webrtc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_webrtc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ICEServers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webrtc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadP2PVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webrtc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadP2PVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webrtc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopP2PVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webrtc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopP2PVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webrtc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenegotiateP2PVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webrtc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenegotiateP2PVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_webrtc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_webrtc_proto_goTypes,
		DependencyIndexes: file_webrtc_proto_depIdxs,
		MessageInfos:      file_webrtc_proto_msgTypes,
	}.Build()
	File_webrtc_proto = out.File
	file_webrtc_proto_rawDesc = nil
	file_webrtc_proto_goTypes = nil
	file_webrtc_proto_depIdxs = nil
}
